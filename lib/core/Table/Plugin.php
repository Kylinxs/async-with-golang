<?php

// (c) Copyright by authors of the Tiki Wiki CMS Groupware Project
//
// All Rights Reserved. See copyright.txt for details and a complete list of authors.
// Licensed under the GNU LESSER GENERAL PUBLIC LICENSE. See license.txt for details.
// $Id$

//this script may only be included - so its better to die if called directly.
if (strpos($_SERVER['SCRIPT_NAME'], basename(__FILE__)) !== false) {
    header('location: index.php');
    exit;
}

/**
 * Class Table_Plugin
 *
 * For use by plugins to apply tablesorter to tables generated by the plugin. Creates parameters that
 * can be merged in with the plugin's parameters and generates settings from user input that can be
 * used in Table_Factory
 */
class Table_Plugin
{
    /**
     * Standard tablesorter parameters for a plugin
     * @var array
     */
    public $params = [];

    /**
     * Holds the settings created by setSettings function below
     * @var
     */
    public $settings;

    /**
     * Available types of column and table calculations
     * @var array
     */
    private $mathtypes = [
        'count',
        'sum',
        'max',
        'min',
        'mean',
        'median',
        'mode',
        'range',
        'varp',
        'vars',
        'stdevp',
        'stdevs',
    ];

    /**
     * Map to actual tablesorter syntax
     * @var array
     */
    private $totalfilters = [
        'visible' => '',
        'unfiltered' => ':not(.filtered)',
        'all' => '*',
        'hidden' => ':hidden',
    ];

    /**
     * Creates parameters that can be appended to a plugin's native parameters so the user can
     * set tablesorter functionality
     */
    public function createParams()
    {
        $this->params = [
            'server' => [
                'required' => false,
                'name' => tra('Server-side Processing'),
                'description' => tr(
                    'Enter %0y%1 to have the server do the sorting and filtering through Ajax and %0n%1 to have the
                    browser do it (n is the default). Set to %0y%1 (and also set the Paginate parameter
                    (%0tspaginate%1)) if you do not want all rows fetched at once, but rather fetch rows as you
                    paginate, filter or sort.',
                    '<code>',
                    '</code>'
                ),
                'since' => '12.0',
                'doctype' => 'tablesorter',
                'default' => 'n',
                'filter' => 'striptags',
            ],
            'sortable' => [
                'required' => false,
                'name' => tra('Overall Sort Settings'),
                'description' => tr(
                    'Serves as the overall switch for turning jQuery Tablesorter on (also for filtering) as well as
                    overall sort settings. Enter %0y%1 to allow sorting and %0n%1 to disallow (n is the default).
                    Enter %0type:save%1 to allow sorts to be saved between page refreshes.
                    Enter %0type:%2reset%3;text:*****%1 to allow sorting and show an unsort button with
                    custom text. Enter %0type:%2savereset%3;text:buttontext%1 to allow the same for saved sorts.',
                    '<code>',
                    '</code>',
                    '<strong>',
                    '</strong>'
                ),
                'since' => '12.0',
                'doctype' => 'tablesorter',
                'default' => 'n',
                'filter' => 'striptags',
            ],
            'sortList' => [
                'required' => false,
                'name' => tra('Pre-sorted Columns'),
                'description' => tr(
                    'Bracketed numbers for column number (first column = 0) and sort direction
                    (%20%3 = ascending, %21%3 = descending, %2n%3 = no sort, %2y%3 = allow sorting but no pre-sort),
                    for example: %0. If the first pre-sorted or no filter column is not the first column, then you
                    should use the %2y%3 parameter (as in %1) to assign all previous columns.',
                    '<code>~np~[0,y],[1,0],[2,n]~/np~</code>',
                    '<code>~np~[0,y]~/np~</code>',
                    '<code>',
                    '</code>'
                ),
                'since' => '12.0',
                'doctype' =